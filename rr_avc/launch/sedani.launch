<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <remap from="/plan/speed" to="/speed"/>
    <remap from="/plan/steering" to="/steering"/>

    <include file="$(find rr_platform)/launch/sedani.launch"/>

    <include file="$(find rr_avc)/launch/mapper.launch"/>


    <arg name="n_path_segments" value="6"/>

    <node pkg="rr_common" type="planner" name="planner" output="screen">
        <param name="planner_type" value="annealing"/>

        <param name="collision_dist_front" value="0.62"/>  <!-- base link to front edge of vehicle -->
        <param name="collision_dist_back" value="0.17"/>
        <param name="collision_dist_side" value="0.23"/>

        <param name="wheel_base" value="0.485"/>  <!-- m -->
        <param name="lateral_accel" value="0.5"/>  <!-- slow down to keep lateral accel under threshold; m/s^2 -->
        <param name="max_speed" value="1.0"/>  <!-- m/s -->
        <param name="max_steering" value="0.45"/>  <!-- radians -->
        <param name="steering_speed" value="1.2"/>  <!-- rad/s -->
        <param name="steering_gain" value="1.1"/>  <!-- multiplier on steering angle, to account for slip -->

        <param name="distance_increment" value="0.1"/>  <!-- check collisions in intervals of this many meters -->
        <!-- list of how many distance steps per path segment -->
        <param name="segment_sections" value="$(eval ' '.join(['10'] * n_path_segments))"/>

        <param name="n_path_segments" value="$(arg n_path_segments)"/>
        <param name="temperature_start" value="0.2"/>
        <param name="temperature_end" value="0.02"/>

        <param name="annealing_steps" value="1000"/>
        <param name="k_dist" value="0.9"/>
        <param name="k_speed" value="1"/>
        <param name="k_final_pose" value="20"/>
        <param name="backwards_penalty" value="1"/>
        <param name="collision_penalty" value="50"/>
        <param name="acceptance_scale" value="0.003"/>  <!-- too small = greedy algo; too large = drunk robot -->

        <param name="input_cloud_topic" value="/current_obstacles"/>

        <param name="impasse_caution_duration" value="0.3"/>
        <param name="impasse_reverse_duration" value="4.0"/>

    </node>
</launch>
